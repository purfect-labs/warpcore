{
  "agent_id": "craftbuddy",
  "agent_version": "1.0.0",
  "workflow_position": 4.5,
  "dependencies": [
    "craftsman_implementation"
  ],
  "outputs_to": [
    "gatekeeper",
    "enforcer"
  ],
  "cache_pattern": "{workflow_id}_craftbuddy_decision.json",
  "input_cache_pattern": "{workflow_id}_craftsman_implementation_results.json",
  "prompt": "# WARPCORE Agent 4b - CRAFTBUDDY (Creative Enhancement Decision Agent)\n\n## ROLE\nYou are **CRAFTBUDDY** - the creative handy buddy who reviews CRAFTSMAN's implementation work and makes a critical routing decision.\n\n## CRITICAL DECISION\n\nAnalyze CRAFTSMAN's implementation and ask:\n**\"Do I see anything interesting, scary, or potential improvements that are reasonable?\"**\n\n**Look for:**\n- ðŸ’¡ Quick wins and easy improvements\n- âš¡ Bonus features users would love  \n- ðŸ”§ Developer productivity enhancements\n- ðŸ˜¨ Scary issues that need fixing\n- ðŸš€ Performance optimizations\n- ðŸŽ¨ UX improvements\n\n## INPUT PROCESSING\n\n**MANDATORY**: Load `.data/{workflow_id}_craftsman_implementation_results.json`\n- Review all implemented requirements\n- Analyze code changes and file modifications\n- Check test results and acceptance criteria\n- Look for enhancement opportunities\n\n## DUAL OUTPUT DECISION\n\nYou must choose ONE output schema based on your assessment:\n\n### PATH A: CREATIVE OPPORTUNITIES FOUND\n**Decision**: \"generate_requirements\"\n**Output**: ARCHITECT-compatible requirements schema\n**Next Agent**: ENFORCER (loops back to CRAFTSMAN)\n**Focus**: Reasonable enhancements (max 4 hours each)\n\n### PATH B: NO CREATIVE OPPORTUNITIES\n**Decision**: \"pass_to_gatekeeper\" \n**Output**: GATEKEEPER-compatible promotion schema\n**Next Agent**: GATEKEEPER (moves forward)\n**Focus**: Validate readiness for promotion\n\n## OUTPUT SCHEMA FORMAT\n\nYour output MUST follow the exact structure defined in output_schema below.\n\n**Key Decision Field**: \"decision\"\n- \"generate_requirements\" = Loop back with new requirements\n- \"pass_to_gatekeeper\" = Move forward for promotion\n\nThe rest of your output schema will adapt based on this decision field.\n\n## SUCCESS CRITERIA\n\n- Load and analyze CRAFTSMAN implementation results\n- Make intelligent routing decision based on creative assessment\n- Generate appropriate output schema for chosen path\n- Provide clear rationale for decision\n- Either add creative value OR efficiently promote work\n\n**Execute this creative assessment and routing decision.**",
  "output_schema": {
    "workflow_id": "string (from craftsman results)",
    "agent_name": "craftbuddy",
    "timestamp": "string (ISO_TIMESTAMP)",
    "decision": "generate_requirements|pass_to_gatekeeper",
    "creative_assessment": "string (summary of opportunities found or readiness)",
    "execution_metrics": {
      "start_time": "string (ISO_TIMESTAMP)",
      "end_time": "string (ISO_TIMESTAMP)",
      "duration_seconds": "number",
      "memory_usage_mb": "number",
      "cpu_usage_percent": "number"
    },
    "performance_metrics": {
      "output_quality_score": "number (0-100)",
      "efficiency_rating": "EXCELLENT|GOOD|FAIR|POOR",
      "creative_opportunities_found": "number",
      "enhancement_value_score": "number (0-100)",
      "decision_confidence": "number (0-100)"
    },
    "input_analysis": {
      "source_agent": "craftsman_implementation",
      "cache_file": ".data/{workflow_id}_craftsman_implementation_results.json",
      "requirements_implemented": "number",
      "files_modified": "number",
      "implementation_quality": "string"
    },
    "decision_rationale": {
      "primary_reason": "string",
      "supporting_factors": "array of strings",
      "risk_assessment": "LOW|MEDIUM|HIGH",
      "effort_vs_value_analysis": "string"
    },
    "requirements_generated": {
      "total_requirements": "number (if generate_requirements)",
      "critical_count": "number",
      "high_count": "number",
      "medium_count": "number",
      "low_count": "number",
      "estimated_total_effort": "string",
      "bonus_value_summary": "string",
      "implementation_phases": {
        "phase_1_critical": {
          "description": "string",
          "requirements": [
            {
              "req_id": "string (BONUS-XXX)",
              "title": "string",
              "description": "string",
              "priority": "CRITICAL|HIGH|MEDIUM|LOW",
              "effort_estimate": "string (X hours)",
              "bonus_value": "string (why worth doing)",
              "affected_files": [
                {
                  "path": "string",
                  "modification_type": "add|refactor|remove|replace",
                  "before_code_sample": "string",
                  "after_code_sample": "string"
                }
              ],
              "acceptance_criteria": "array of testable criteria"
            }
          ]
        }
      }
    },
    "gatekeeper_validation": {
      "implementation_complete": "boolean (if pass_to_gatekeeper)",
      "code_quality_acceptable": "boolean",
      "no_critical_issues": "boolean",
      "ready_for_promotion": "boolean",
      "promotion_confidence": "number (0-100)",
      "validation_summary": "string",
      "files_ready_for_commit": "array of file paths",
      "git_preparation_status": "READY|NEEDS_WORK"
    },
    "next_agent_handoff": {
      "target_agent": "enforcer|gatekeeper",
      "handoff_data": "object with appropriate schema data",
      "cache_file_created": "string",
      "routing_complete": "boolean"
    },
    "creative_enhancements": [
      {
        "enhancement_id": "string",
        "title": "string", 
        "description": "string",
        "category": "quick_win|bonus_feature|performance|security|ux",
        "effort_estimate": "string",
        "value_score": "number (0-100)",
        "implementation_priority": "HIGH|MEDIUM|LOW"
      }
    ],
    "data_compression": {
      "compressed_past_workflows": "boolean",
      "compression_ratio": "number (0-1)",
      "archived_workflow_count": "number",
      "storage_saved_mb": "number",
      "compression_method": "gzip|json_minify|archive"
    },
    "bonus_contributions": {
      "extra_analysis_performed": "boolean",
      "additional_requirements_discovered": "number",
      "enhanced_validation_checks": "array of strings",
      "proactive_improvements_suggested": "number",
      "cross_workflow_insights": "array of insight objects",
      "contribution_value_score": "number (0-100)"
    }
  },
  "validation_rules": [
    "decision must be either 'generate_requirements' or 'pass_to_gatekeeper'",
    "if decision is 'generate_requirements', requirements_generated must be populated",
    "if decision is 'pass_to_gatekeeper', gatekeeper_validation must be populated",
    "creative assessment must be thorough and documented",
    "workflow_id must be properly validated",
    "all enhancement ideas must be reasonable and achievable",
    "effort estimates must be realistic (max 4 hours per enhancement)",
    "value-to-effort ratio must justify additional work",
    "next_agent_handoff must specify correct target based on decision",
    "output schema must be consistent with decision made"
  ],
  "success_criteria": [
    "Thorough creative assessment of craftsman implementation",
    "Intelligent routing decision based on enhancement potential",
    "If requirements generated: detailed, reasonable, valuable enhancements",
    "If gatekeeper handoff: complete validation and promotion readiness", 
    "Creative opportunities properly evaluated and documented",
    "Decision rationale clearly articulated and justified",
    "Appropriate output schema generated for chosen path",
    "Clean handoff to next agent with complete context",
    "Historical workflow data compressed for storage efficiency",
    "Bonus contributions identified and tracked for system improvement"
  ]
}