{
  "flow_pattern": "WARPCORE Agent Flow Schema Definition",
  "schema_version": "1.0.0",
  "generated_from": "Comprehensive schema definition + real agent files",
  "timestamp": "2025-10-07T16:55:35.921274",
  "agent_definitions": {
    "origin": {
      "position": "0a",
      "name": "ORIGIN",
      "role": "Bootstrap Agent",
      "description": "Initializes workflow system, performs health checks",
      "flow": {
        "inputs_from": [],
        "outputs_to": [
          "boss"
        ],
        "input_sources": [
          "SYSTEM_BOOTSTRAP"
        ],
        "output_targets": [
          "ORCHESTRATOR"
        ]
      },
      "schema_types": {
        "receives": "BOOTSTRAP_REQUEST",
        "produces": "ORCHESTRATOR_CONTEXT",
        "transformation": "bootstrap_request \u2192 orchestrator_context"
      },
      "data_flow": {
        "input_schema": "null | bootstrap_request",
        "output_schema": "orchestrator_context",
        "cache_pattern": "{workflow_id}_bootstrap_state.json"
      }
    },
    "boss": {
      "position": "0b",
      "name": "BOSS",
      "role": "Workflow Orchestrator",
      "description": "Manages workflow execution, sequences agents",
      "flow": {
        "inputs_from": [
          "origin"
        ],
        "outputs_to": [
          "pathfinder"
        ],
        "input_sources": [
          "BOOTSTRAP"
        ],
        "output_targets": [
          "ANALYSIS"
        ]
      },
      "schema_types": {
        "receives": "ORCHESTRATOR_CONTEXT",
        "produces": "ANALYSIS_REQUEST",
        "transformation": "orchestrator_context \u2192 analysis_request"
      },
      "data_flow": {
        "input_schema": "orchestrator_context",
        "output_schema": "analysis_request",
        "cache_pattern": "{workflow_id}_orchestrator_state.json"
      }
    },
    "pathfinder": {
      "position": "1a",
      "name": "PATHFINDER",
      "role": "Schema Coherence Reconciler",
      "description": "Analyzes codebase, identifies gaps and inconsistencies",
      "flow": {
        "inputs_from": [
          "boss"
        ],
        "outputs_to": [
          "architect"
        ],
        "input_sources": [
          "ORCHESTRATOR"
        ],
        "output_targets": [
          "REQUIREMENTS"
        ]
      },
      "schema_types": {
        "receives": "ANALYSIS_REQUEST",
        "produces": "CODEBASE_COHERENCE_ANALYSIS",
        "transformation": "analysis_request \u2192 codebase_coherence_analysis",
        "convergent_target": "architect",
        "convergent_peer": "oracle",
        "convergent_distinction": "codebase_analysis_vs_user_requirements"
      },
      "data_flow": {
        "input_schema": "analysis_request",
        "output_schema": "codebase_coherence_analysis",
        "cache_pattern": "{workflow_id}_pathfinder_schema_coherence_analysis.json",
        "convergent_flow": true
      }
    },
    "oracle": {
      "position": "1b",
      "name": "ORACLE",
      "role": "User Input Requirements Translator",
      "description": "Converts user specs into structured requirements",
      "flow": {
        "inputs_from": [
          "USER_EXTERNAL"
        ],
        "outputs_to": [
          "architect"
        ],
        "input_sources": [
          "HUMAN",
          "RAW_SPECS"
        ],
        "output_targets": [
          "REQUIREMENTS"
        ]
      },
      "schema_types": {
        "receives": "USER_SPECIFICATIONS",
        "produces": "USER_COHERENCE_ANALYSIS",
        "transformation": "user_specifications \u2192 user_coherence_analysis",
        "convergent_target": "architect",
        "convergent_peer": "pathfinder",
        "convergent_distinction": "user_driven_requirements_vs_codebase_analysis"
      },
      "data_flow": {
        "input_schema": "user_specifications",
        "output_schema": "user_coherence_analysis",
        "cache_pattern": "{workflow_id}_oracle_user_requirements_analysis.json",
        "convergent_flow": true
      }
    },
    "architect": {
      "position": "2",
      "name": "ARCHITECT",
      "role": "Requirements Generator",
      "description": "Converts analysis into actionable requirements",
      "flow": {
        "inputs_from": [
          "pathfinder",
          "oracle"
        ],
        "outputs_to": [
          "enforcer"
        ],
        "input_sources": [
          "ANALYSIS",
          "USER_REQUIREMENTS"
        ],
        "output_targets": [
          "VALIDATION"
        ]
      },
      "schema_types": {
        "receives": "CONVERGENT_DUAL_ANALYSIS",
        "produces": "REQUIREMENTS_ANALYSIS",
        "transformation": "convergent_dual_analysis \u2192 requirements_analysis",
        "input_sources": [
          "pathfinder.codebase_coherence_analysis",
          "oracle.user_coherence_analysis"
        ],
        "synthesis_type": "dual_coherence_convergence"
      },
      "data_flow": {
        "input_schema": "convergent_dual_analysis",
        "output_schema": "requirements_analysis",
        "cache_pattern": "{workflow_id}_architect_requirements_analysis.json",
        "convergent_synthesis": true,
        "synthesis_pattern": "merge_pathfinder_oracle_analysis"
      }
    },
    "enforcer": {
      "position": "3",
      "name": "ENFORCER",
      "role": "Enhanced Requirements Validator",
      "description": "Validates requirements for feasibility and PAP compliance",
      "flow": {
        "inputs_from": [
          "architect"
        ],
        "outputs_to": [
          "craftsman"
        ],
        "input_sources": [
          "REQUIREMENTS"
        ],
        "output_targets": [
          "IMPLEMENTATION"
        ]
      },
      "schema_types": {
        "receives": "REQUIREMENTS_ANALYSIS",
        "produces": "VALIDATED_REQUIREMENTS",
        "transformation": "requirements_analysis \u2192 validated_requirements"
      },
      "data_flow": {
        "input_schema": "requirements_analysis",
        "output_schema": "validated_requirements",
        "cache_pattern": "{workflow_id}_validated_requirements.json"
      }
    },
    "craftsman": {
      "position": "4a",
      "name": "CRAFTSMAN",
      "role": "Implementation Agent",
      "description": "Executes approved requirements, modifies code files",
      "flow": {
        "inputs_from": [
          "enforcer",
          "gatekeeper_feedback"
        ],
        "outputs_to": [
          "craftbuddy"
        ],
        "input_sources": [
          "VALIDATION",
          "FEEDBACK"
        ],
        "output_targets": [
          "REVIEW"
        ]
      },
      "schema_types": {
        "receives": "VALIDATED_REQUIREMENTS",
        "produces": "IMPLEMENTATION_RESULTS",
        "transformation": "validated_requirements \u2192 implementation_results"
      },
      "data_flow": {
        "input_schema": "validated_requirements",
        "output_schema": "implementation_results",
        "cache_pattern": "{workflow_id}_implementation_results.json"
      }
    },
    "craftbuddy": {
      "position": "4b",
      "name": "CRAFTBUDDY",
      "role": "Creative Enhancement & Decision Agent",
      "description": "Reviews work, decides loop back or promote forward",
      "flow": {
        "inputs_from": [
          "craftsman"
        ],
        "outputs_to": [
          "craftsman",
          "gatekeeper"
        ],
        "input_sources": [
          "IMPLEMENTATION"
        ],
        "output_targets": [
          "LOOP_BACK",
          "PROMOTION"
        ]
      },
      "schema_types": {
        "receives": "IMPLEMENTATION_RESULTS",
        "produces": "ENHANCEMENT_DECISION",
        "transformation": "implementation_results \u2192 enhancement_decision"
      },
      "data_flow": {
        "input_schema": "implementation_results",
        "output_schema": "enhancement_decision",
        "cache_pattern": "{workflow_id}_enhancement_decision.json"
      },
      "decision_logic": {
        "loop_condition": "enhancement_opportunities_found",
        "promote_condition": "implementation_complete_and_satisfactory"
      }
    },
    "gatekeeper": {
      "position": "5",
      "name": "GATEKEEPER",
      "role": "Gate Promote Agent",
      "description": "Final validation, decides completion or cycle restart",
      "flow": {
        "inputs_from": [
          "craftbuddy"
        ],
        "outputs_to": [
          "craftsman",
          "boss"
        ],
        "input_sources": [
          "PROMOTION"
        ],
        "output_targets": [
          "FIXES",
          "NEW_CYCLE"
        ]
      },
      "schema_types": {
        "receives": "ENHANCEMENT_DECISION",
        "produces": "GATE_DECISION",
        "transformation": "enhancement_decision \u2192 gate_decision"
      },
      "data_flow": {
        "input_schema": "enhancement_decision",
        "output_schema": "gate_decision",
        "cache_pattern": "{workflow_id}_gate_decision.json"
      },
      "decision_logic": {
        "fixes_condition": "quality_standards_not_met",
        "completion_condition": "all_criteria_satisfied",
        "new_cycle_condition": "workflow_complete_start_new"
      }
    },
    "mama_bear": {
      "position": "DEV_QA",
      "name": "MAMA BEAR",
      "role": "QA & Production Readiness Inspector",
      "description": "Development tool for comprehensive quality assurance and production readiness validation",
      "flow": {
        "inputs_from": [
          "SYSTEM_STATE"
        ],
        "outputs_to": [
          "origin"
        ],
        "input_sources": [
          "ALL_AGENTS",
          "CODEBASE",
          "WORKFLOWS"
        ],
        "output_targets": [
          "PRODUCTION_READINESS_REPORT"
        ]
      },
      "schema_types": {
        "receives": "SYSTEM_STATE",
        "produces": "PRODUCTION_READINESS_ASSESSMENT",
        "transformation": "system_state \u2192 production_readiness_assessment"
      },
      "data_flow": {
        "input_schema": "system_state",
        "output_schema": "production_readiness_assessment",
        "cache_pattern": "{workflow_id}_mama_bear_assessment.json"
      },
      "dev_tool": true
    },
    "harmony": {
      "position": "DEV_META",
      "name": "HARMONY",
      "role": "Coherence Guardian",
      "description": "Development meta-agent for maintaining system coherence across prompts, schemas, and documentation",
      "flow": {
        "inputs_from": [
          "SYSTEM_COMPONENTS"
        ],
        "outputs_to": [
          "origin"
        ],
        "input_sources": [
          "AGENT_PROMPTS",
          "SCHEMAS",
          "DOCUMENTATION",
          "USER_REQUIREMENTS"
        ],
        "output_targets": [
          "COHERENCE_REPORT"
        ]
      },
      "schema_types": {
        "receives": "SYSTEM_COMPONENTS",
        "produces": "COHERENCE_ASSESSMENT",
        "transformation": "system_components \u2192 coherence_assessment"
      },
      "data_flow": {
        "input_schema": "system_components",
        "output_schema": "coherence_assessment",
        "cache_pattern": "{workflow_id}_harmony_coherence_results.json"
      },
      "dev_tool": true
    }
  },
  "flow_relationships": {
    "linear_flow": [
      {
        "from": "origin",
        "to": "boss",
        "type": "bootstrap"
      },
      {
        "from": "boss",
        "to": "pathfinder",
        "type": "orchestration"
      },
      {
        "from": "pathfinder",
        "to": "architect",
        "type": "analysis"
      },
      {
        "from": "oracle",
        "to": "architect",
        "type": "user_requirements"
      },
      {
        "from": "architect",
        "to": "enforcer",
        "type": "requirements"
      },
      {
        "from": "enforcer",
        "to": "craftsman",
        "type": "validation"
      },
      {
        "from": "craftsman",
        "to": "craftbuddy",
        "type": "implementation"
      }
    ],
    "decision_flows": [
      {
        "from": "craftbuddy",
        "to": [
          "enforcer",
          "gatekeeper"
        ],
        "type": "enhancement_decision",
        "conditions": {
          "enforcer": "generate_additional_requirements",
          "gatekeeper": "promote_for_final_validation"
        }
      },
      {
        "from": "gatekeeper",
        "to": [
          "craftsman",
          "pathfinder"
        ],
        "type": "gate_decision",
        "conditions": {
          "craftsman": "needs_fixes_or_improvements",
          "pathfinder": "complete_cycle_start_new_workflow"
        }
      }
    ],
    "external_inputs": [
      {
        "source": "USER",
        "to": "oracle",
        "type": "user_specifications"
      }
    ]
  },
  "schema_transformations": {
    "bootstrap_request": {
      "structure": "null | {workflow_priority, focus_areas, execution_strategy}",
      "purpose": "Initialize workflow system"
    },
    "orchestrator_context": {
      "structure": "{workflow_id, system_health, agent_discovery, bootstrap_mode}",
      "purpose": "Provide orchestration context"
    },
    "analysis_request": {
      "structure": "{workflow_id, client_directory, analysis_scope, orchestration_data}",
      "purpose": "Request codebase analysis"
    },
    "schema_coherence_analysis": {
      "structure": "{gaps, inconsistencies, recommendations, file_mappings}",
      "purpose": "Unified requirements format from analysis or user input"
    },
    "requirements_analysis": {
      "structure": "{requirements[], implementation_phases, dependency_graph}",
      "purpose": "Structured implementation requirements"
    },
    "validated_requirements": {
      "structure": "{approved_requirements[], validation_results, feasibility_check}",
      "purpose": "PAP-compliant validated requirements"
    },
    "implementation_results": {
      "structure": "{code_changes[], test_results, git_operations, before_after}",
      "purpose": "Implementation output with validation"
    },
    "enhancement_decision": {
      "structure": "{decision, enhancements[], promotion_ready, loop_back_reasons}",
      "purpose": "Creative assessment and routing decision"
    },
    "gate_decision": {
      "structure": "{final_decision, quality_assessment, next_action, cycle_complete}",
      "purpose": "Final validation and cycle management"
    }
  },
  "flow_patterns": {
    "convergent_flow": {
      "description": "Multiple inputs to architect",
      "agents": [
        "pathfinder",
        "oracle"
      ],
      "target": "architect",
      "schema": "Both produce schema_coherence_analysis in common format"
    },
    "decision_loops": {
      "craftbuddy_loop": {
        "description": "Creative enhancement loop",
        "from": "craftbuddy",
        "to": "enforcer",
        "condition": "additional_requirements_needed"
      },
      "gatekeeper_fixes": {
        "description": "Quality improvement loop",
        "from": "gatekeeper",
        "to": "craftsman",
        "condition": "quality_standards_not_met"
      }
    },
    "cycle_restart": {
      "description": "Complete workflow cycle restart",
      "from": "gatekeeper",
      "to": "pathfinder",
      "condition": "workflow_complete_start_new"
    }
  }
}